- name: Deploy application to AKS cluster
  hosts: localhost
  connection: local
  vars:
    ansible_python_interpreter: /usr/bin/python3
    docker_image_name: "{{ lookup('env', 'DOCKER_IMAGE_NAME') }}"

  tasks:
    - name: Ensure the default namespace exists
      kubernetes.core.k8s:
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: default

    - name: Add Prometheus Helm repository
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts

    - name: Install kube-prometheus-stack
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/kube-prometheus-stack
        release_namespace: prometheus
        create_namespace: true
        values:
          prometheus:
            service:
              type: LoadBalancer
          grafana:
            service:
              type: LoadBalancer


    - name: Create deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: dvga
            namespace: default
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: dvga
            template:
              metadata:
                labels:
                  app: dvga
              spec:
                containers:
                  - name: dvga-container
                    image: "{{ docker_image_name }}:latest"
                    ports:
                      - containerPort: 5013

    - name: Create Service for dvga
      kubernetes.core.k8s:
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: dvga-service
            namespace: default
            labels:
              app: dvga
          spec:
            selector:
              app: dvga
            ports:
              - name: http
                port: 5013
                targetPort: 5013

    - name: Deploy ServiceMonitor for dvga
      kubernetes.core.k8s:
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') }}"
        definition: "{{ lookup('file', 'dvga-servicemonitor.yaml') }}"
